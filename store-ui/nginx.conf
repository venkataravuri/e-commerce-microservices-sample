user nginx;
worker_processes 1;
events {
  worker_connections 1024;
}
http {
  include /etc/nginx/mime.types;
  

  server {
    listen 80;
    root /var/www;
    index index.html index.htm;

    location /api/ {
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
      }
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # Docker 내부 DNS resolver 사용할 경우만 유지
      # resolver 127.0.0.11; 
      
      #Kubernetes 클러스터의 DNS 서버를 사용할 경우
      resolver kube-dns.kube-system.svc.cluster.local valid=5s;

      #환경변수 처리 필요
      set $products_service products-service.default.svc.cluster.local:5010; 
      set $cart_service cart-service.default.svc.cluster.local:5020;
      set $users_service users-service.default.svc.cluster.local:5030;
      
      if ($request_uri ~ ^/api/products) {
          proxy_pass http://$products_service;
      }
      if ($request_uri ~ ^/api/carts) {
          proxy_pass http://$cart_service;
      }
      if ($request_uri ~ ^/api/users) {
          proxy_pass http://$users_service;
      }
    }

    location / {
        root   /store-ui; # Set the root directory to serve static files
        index  index.html; # Set the default index file
        try_files $uri $uri/ /index.html; # Handle non-existent URLs
    }
  }
}